n_mun <- length(mun)  # Número de municipios a procesar
# Iterar sobre cada municipio para realizar la búsqueda de noticias
for (i in seq_along(mun_raw)) {
# Construir la URL para la búsqueda de noticias por municipio
url <- paste0(BASE_URL, "/?s=", mun_raw[i]) # Construir la URL => esto va a cambiar según la fuente
url <- paste0(BASE_URL, "/?s=", mun_raw[1]) #TEST
url <- tryCatch(read_html(url), error = function(e) NULL) # Leer el HTML de la página web
if (is.null(url)) next
closeAllConnections() # Cerrar conexiones abiertas por `read_html`
# De aquí en adelante todos los que esta dentro de html_nodes debe ser reemplazado según
# el contenido del html de cada página, estos son valores inventados como modelo
# Obtener el número total de páginas de resultados de búsqueda => esto va a cambiar según la fuente
last_page <- url %>%
html_nodes("a.last") %>%
html_attr("href") %>%
stringr::str_extract("\\d+(?=/\\?s=)") %>%
as.numeric()
last_page <- 3
print(paste("(", i, "/", n_mun, ")", mun_raw[i], ":", last_page)) # Imprimir el municipio y el número de la última página
# Si hay páginas de resultados, proceder con el scraping de esas páginas
if (!is.na(last_page) && last_page > 0) {
# Iterar sobre cada página de resultados de la búsqueda (en paralelo)
Notas_municipio <- mclapply(1:last_page, function(page) {
tryCatch({
# Construir la URL de la página actual de búsqueda
url <- paste0(BASE_URL, "page/", page, "?s=",  mun_raw[i])
url <- tryCatch(read_html(url), error = function(e) NULL) # Leer el HTML de la página de resultados
if (is.null(url)) return(NULL)
closeAllConnections()  # Cerrar las conexiones abiertas por `read_html`
# Extraer los títulos de las noticias, sus enlaces y fechas
titulo <- url %>% html_nodes(".td-module-title a") %>% html_text()  %>% basic_clean()
link <- url %>% html_nodes(".td-module-title a") %>% html_attr("href")  %>% basic_clean()
fecha_publicacion_str <- url %>% html_nodes(".td-module-date") %>% html_text() %>% basic_clean()
municipio <- mun_raw[i] # Asignar el municipio actual
oid <- OID # Asignar el OID (ID de la fuente)
# Crear un data frame con la información extraída
Notas <- data.frame(link, estado = ESTADO, municipio, oid, fuente, titulo, fecha_publicacion_str)
# Eliminar duplicados manteniendo la primera ocurrencia
#Notas <- Notas %>% distinct(link, .keep_all = TRUE)
N <-NULL # Inicializar una variable para almacenar los detalles de cada noticia
# Iterar sobre cada enlace de noticia para obtener más detalles
N <- do.call(rbind, mclapply(Notas$link, function(nota_link) {
tryCatch({
url <- tryCatch(read_html(nota_link), error = function(e) NULL) # Leer el HTML de la página de la noticia
if (is.null(url)) return(NULL)
closeAllConnections() # Cerrar las conexiones abiertas por `read_html`
# basic_clean() es una función definida en functions_all.R que nos ayuda a limpiar caracteres no deseados
# Extraer la información
resumen <- url %>% html_nodes(".td-excerpt") %>% html_text() %>% basic_clean()
# En muchos casos van a observar que no hay un resumen de la noticia, por lo que tienen que agregar:
resumen <- if (length(resumen) == 0) NA else paste(resumen, collapse = " ") %>% basic_clean() #creo q acá hay en todos pero lo dejo por las dudas
seccion <- url %>% html_nodes(".td-post-category") %>% html_text() %>% basic_clean()
# En muchos casos van a observar que no esta la sección de la noticia, por lo que tienen que agregar:
seccion <- if (length(seccion) == 0) NA else paste(seccion, collapse = " ") %>% basic_clean()
nota <- url %>%
html_nodes(".td-post-content p") %>% # Cambia a la clase correcta si el contenido está en otro lugar
html_text() %>%
paste(collapse = " ") %>% # Unir párrafos en un solo texto
basic_clean()
# Crear un data frame con los detalles de la noticia
data.frame(nota_link, nota, seccion, resumen)
}, error = function(e) {
cat("ERROR en nota_link:", nota_link, ":", conditionMessage(e), "\n")
NULL
})
}, mc.preschedule=TRUE))
# Agrega variables al data.frame Notas
Notas <- Notas %>%
left_join(N, by = c("link" = "nota_link"))
# Formatea la fecha de publicación
# string_fecha_a_fecha() es una función definida en functions_all.R que convierte la fecha al formato deseado
Notas$fecha_publicacion <- string_fecha_a_fecha(Notas$fecha_publicacion_str)
# Formatear las columnas del data frame
colnames(Notas) <- tolower(colnames(Notas)) # Convertir los nombres de las columnas a minúsculas
Notas <- Notas[, c(COLS_ORDENADAS)]  # Reordenar las columnas según una lista predefinida
return(Notas)
}, error = function(e) {
cat("ERROR :", conditionMessage(e), "\n")
NULL
})
}, mc.preschedule=TRUE) # Cierre de mclapply para last_page
# Almacena resultados de cada municipio
Notas_municipio <- do.call(rbind, Notas_municipio)
# Guardar en la base de datos
# descomentar cuando ya hayan probado que el codigo funciona correctamente para subir la info a la base de datos)
#dbWriteTable(con, TABLA, Notas_municipio, append = TRUE)
# Imprimir el progreso de la recolección de noticias
print(paste0("Municipio procesado: ", mun_raw[i]))
}
}
# Cierra conexión a la base de datos
# descomentar cuando ya hayan probado que el codigo funciona correctamente)
# dbDisconnect(con)
})
View(Notas_municipio)
dir
N
View(municipios)
Notas <- data.frame(
link = link,
estado = estado,
municipio = municipio,
oid = rep(oid, n),
fuente = rep(fuente, n),
titulo = titulo,
resumen = resumen[1:n]  # recorta a 6
)
library(plm)
library(readr)
library(dplyr)
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
data <- read_csv("cornwell.csv")
library(readxl)
#cargar datos
data <- read_csv("cornwell.csv")
library(readr)
library(dplyr)
library(readxl)
rm(list=ls())
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
data <- read_csv("cornwell.csv")
library(readr)
rm(list=ls())
install.packages("readr")
library(readr)
library(dplyr)
library(readr)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
data <- read_csv("cornwell.csv")
View(data)
View(data)
View(data)
lncrmrte <- ln(crmrte)
lncrmrte <- log(crmrte)
crmrate
lncrmrte <- log('crmrte')
View(data)
df <- read_csv("cornwell.csv")
rm(list=ls())
library(readr)
library(dplyr)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
df <- read_csv("cornwell.csv")
lncrmrte <- log(df[crmrte])
lncrmrte <- log(df(crmrte))
lncrmrte <- log(df['crmrte'])
#install.packages("readr")
rm(list=ls())
#librerías necesarias
library(readr)
library(dplyr)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
df <- read_csv("cornwell.csv")
#creo las variables en ln
# Logaritmos
cornwell$lncrmrte <- log(cornwell$crmrte)      # tasa de crimen
cornwell$lnprbarr <- log(cornwell$prbarr)      # prob. de arresto
cornwell$lnprbconv <- log(cornwell$prbconv)    # prob. de condena
cornwell$lnprbpris <- log(cornwell$prbpris)    # prob. de prisión
cornwell$lnavgsen <- log(cornwell$avgsen)      # duración promedio de sentencia
cornwell$lnpolpc <- log(cornwell$polpc)        # policías per cápita
cornwell$lndensity <- log(cornwell$density)    # densidad poblacional
cornwell$lnincome <- log(cornwell$income)      # ingreso per cápita
#creo las variables en ln
# Logaritmos
df$lncrmrte <- log(cornwell$crmrte)      # tasa de crimen
df$lncrmrte <- log(cornwell$crmrte)      # tasa de crimen
df$lncrmrte   <- log(df$crmrte)     # tasa de crimen
df$lnprbarr   <- log(df$prbarr)     # prob. de arresto
df$lnprbconv  <- log(df$prbconv)    # prob. de condena
df$lnprbpris  <- log(df$prbpris)    # prob. de prisión
df$lnavgsen   <- log(df$avgsen)     # duración promedio de sentencia
df$lnpolpc    <- log(df$polpc)      # policías per cápita
df$lndensity  <- log(df$density)    # densidad poblacional
df$lnincome   <- log(df$income)     # ingreso per cápita
#-----------------------------------a------------------------------------------
#ESTIMEN POR MCO
#agrego
modelo <- lm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle)
#install.packages("readr")
rm(list=ls())
#librerías necesarias
library(readr)
library(dplyr)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
df <- read_csv("cornwell.csv")
#-----------------------------------a------------------------------------------
#ESTIMEN POR MCO
#agrego
modelo <- lm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle)
data = df
modelo <- lm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle)
#-----------------------------------a------------------------------------------
#ESTIMEN POR MCO
#agrego
head(df)
modelo <- lm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle)
modelo <- lm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle, data = df)
summary(modelo)
capture.output(summary(modelo),file='nina.txt')
install.packages("stargazer")
stargazer(modelo, type = "latex", out = "modelo.tex")
library(stargazer)
stargazer(modelo, type = "latex", out = "modelo.tex")
capture.output(summary(modelo),file='nina.txt')
cat("\\resizebox{\\textwidth}{!}{%", file = "modelo.tex")
stargazer(modelo, type = "latex", out = "modelo.tex", append = TRUE)
cat("}", file = "modelo.tex", append = TRUE)
stargazer(modelo, type = "latex", out = "modelo2a.tex")
install.packages('fixest')
library(fixest)
#install.packages("readr")
#install.packages("stargazer")  # para exportar en latex fyi
#install.packages('fixest')
rm(list=ls())
#librerías necesarias
library(readr)
library(dplyr)
library(stargazer)
library(fixest)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
df <- read_csv("cornwell.csv")
#-----------------------------------a------------------------------------------
#ESTIMEN POR MCO
#agrego
head(df)
modelo <- lm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle, data = df)
summary(modelo)
stargazer(modelo, type = "latex", out = "modelo2a.tex") #guarda en .txt para latex
#-----------------------------------b------------------------------------------
#use FE
modelo <- feols(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle | region + smsa , data = df)
pdata <- pdata.frame(df, index = c("county", "year"))
library(plm)
install.packages("plm")
library(plm)
pdata <- pdata.frame(df, index = c("county", "year"))
modelo_fe <- plm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle, data = pdata, model = "within")
summary(modelo_fe)
summarise(modelo_fe)
stargazer(modelo, type = "latex", out = "modelo2fe.tex") #guarda en .txt para latex
fixef(modelo_fe)
urban
modelo_fe <- plm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle +urban + central + west , data = pdata, model = "within")
summarise(modelo_fe)
summary(modelo_fe)
modelo_fe <- plm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle +urban + central + west , data = pdata, model = "within")
summary(modelo_fe)
#install.packages("readr")
#install.packages("stargazer")  # para exportar en latex fyi
#install.packages('fixest')
#install.packages("plm")
rm(list=ls())
#librerías necesarias
library(readr)
library(dplyr)
library(stargazer)
library(fixest)
library(plm)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
df <- read_csv("cornwell.csv")
#-----------------------------------a------------------------------------------
#ESTIMEN POR MCO
#agrego
head(df)
#-----------------------------------a------------------------------------------
#ESTIMEN POR MCO
#agrego
#head(df)
modelo <- lm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle +  urban + central + west, data = df)
summary(modelo)
stargazer(modelo, type = "latex", out = "modelo2a.tex") #guarda en .txt para latex
#-----------------------------------b------------------------------------------
#use FE
pdata <- pdata.frame(df, index = c("county", "year"))
modelo_fe <- plm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle , data = pdata, model = "within")
summary(modelo_fe)
stargazer(modelo, type = "latex", out = "modelo2fe.tex") #guarda en .txt para latex
vars <- c("lcrmrte", "lprbarr", "lprbconv", "lprbpris", "lavgsen", "lpolpc",
"ldensity", "ltaxpc", "lpctmin", "lwcon", "lwtuc", "lwtrd", "lwfir",
"lwser", "lwmfg", "lwfed", "lwsta", "lwloc", "lmix", "lpctymle")
# Para cada variable, restamos su media por county (dentro del grupo)
df_within <- df %>%
group_by(county) %>%
mutate(across(all_of(vars), ~ . - mean(.), .names = "d_{.col}")) %>%
ungroup()
summarise(df)
modelofwl <- lm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle +  urban + central + west, data = df)
summary(modelofwl)
length(vars)
medias <- numeric(length(vars))
for (i in 1:length(vars))  {
medias[i] <- mean(df[[i]])
}
medias
#install.packages("readr")
#install.packages("stargazer")  # para exportar en latex fyi
#install.packages('fixest')
#install.packages("plm")
rm(list=ls())
#librerías necesarias
library(readr)
library(dplyr)
library(stargazer)
library(fixest)
library(plm)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
df <- read_csv("cornwell.csv")
vars <- c("lcrmrte", "lprbarr", "lprbconv", "lprbpris", "lavgsen", "lpolpc",
"ldensity", "ltaxpc", "lpctmin", "lwcon", "lwtuc", "lwtrd", "lwfir",
"lwser", "lwmfg", "lwfed", "lwsta", "lwloc", "lmix", "lpctymle")
# Para cada variable, restamos su media por county (dentro del grupo)
df <- df %>%
group_by(estado) %>%
mutate(across(all_of(vars), ~ . - mean(., na.rm = TRUE), .names = "{.col}_cent")) %>%
ungroup()
# Para cada variable, restamos su media por county (dentro del grupo)
df <- df %>%
group_by(county) %>%
mutate(across(all_of(vars), ~ . - mean(., na.rm = TRUE), .names = "{.col}_cent")) %>%
ungroup()
vars <- c("lcrmrte", "lprbarr", "lprbconv", "lprbpris", "lavgsen", "lpolpc",
"ldensity", "ltaxpc", "lpctmin", "lwcon", "lwtuc", "lwtrd", "lwfir",
"lwser", "lwmfg", "lwfed", "lwsta", "lwloc", "lmix", "lpctymle", "west")
# Para cada variable, restamos su media por county (dentro del grupo)
df <- df %>%
group_by(county) %>%
mutate(across(all_of(vars), ~ . - mean(., na.rm = TRUE), .names = "{.col}_cent")) %>%
ungroup()
source("~/Desktop/ECONOMETR-A/tp2/codigo2.R", echo=TRUE)
View(df)
# Para cada variable, restamos su media por county (dentro del grupo)
df <- df %>%
group_by(county) %>%
mutate(across(all_of(vars), ~ . - mean(., na.rm = TRUE), .names = "{.col}_cent")) %>%
ungroup()
View(df)
head(df)
modelofwl <- lm(
lcrmrte_cent ~ lprbarr_cent + lprbconv_cent + lprbpris_cent + lavgsen_cent +
lpolpc_cent + ldensity_cent + ltaxpc_cent + lpctmin_cent + lwcon_cent +
lwtuc_cent + lwtrd_cent + lwfir_cent + lwser_cent + lwmfg_cent + lwfed_cent +
lwsta_cent + lwloc_cent + lmix_cent + lpctymle_cent + urban + central + west,
data = df
)
summary(modelofwl)
df <- df %>%
mutate(nueva_columna = 'nina')
df <- df %>%
mutate(nueva_columna = 100000000)
head(df)
df[nueva_columna]
nueva_columna
df[nueva_columna]
data <- data %>%
mutate(nueva_columna = 100000000)
data <- data %>%
mutate(nueva_columna = west)
#install.packages("readr")
#install.packages("stargazer")  # para exportar en latex fyi
#install.packages('fixest')
#install.packages("plm")
rm(list=ls())
#librerías necesarias
library(readr)
library(dplyr)
library(stargazer)
library(fixest)
library(plm)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
df <- read_csv("cornwell.csv")
df <- df %>%
mutate(nueva_columna = west)
df[nueva_columna]
df['nueva_columna']
#Agregar una columna q sea media de c/u.
vars <- list("lcrmrte", "lprbarr", "lprbconv", "lprbpris", "lavgsen", "lpolpc",
"ldensity", "ltaxpc", "lpctmin", "lwcon", "lwtuc", "lwtrd", "lwfir",
"lwser", "lwmfg", "lwfed", "lwsta", "lwloc", "lmix", "lpctymle", "west", "central", "urban" )
vars
vars <- list("lcrmrte", "lprbarr", "lprbconv", "lprbpris", "lavgsen", "lpolpc",
"ldensity", "ltaxpc", "lpctmin", "lwcon", "lwtuc", "lwtrd", "lwfir",
"lwser", "lwmfg", "lwfed", "lwsta", "lwloc", "lmix", "lpctymle", "west", "central", "urban" )
df <- df %>%
mutate(nueva_col = west)
for (x in vars) {
df <- df %>%
mutate(!!paste0(x, "_media") = 1)
for (x in vars) {
df <- df %>%
group_by(county) %>%
mutate(!!paste0(x, "_media") := mean(!!sym(x), na.rm = TRUE)) %>%
ungroup()
}
west_media
df['west_media']
View(df)
#install.packages("readr")
#install.packages("stargazer")  # para exportar en latex fyi
#install.packages('fixest')
#install.packages("plm")
rm(list=ls())
#librerías necesarias
library(readr)
library(dplyr)
library(stargazer)
library(fixest)
library(plm)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
df <- read_csv("cornwell.csv")
#Agregar una columna q sea media de c/u.
vars <- list("lcrmrte", "lprbarr", "lprbconv", "lprbpris", "lavgsen", "lpolpc",
"ldensity", "ltaxpc", "lpctmin", "lwcon", "lwtuc", "lwtrd", "lwfir",
"lwser", "lwmfg", "lwfed", "lwsta", "lwloc", "lmix", "lpctymle", "west", "central", "urban" )
df <- df %>%
mutate(nueva_col = west)
for (x in vars) {
df <- df %>%
group_by(county) %>%
mutate(
!!paste0(x, "_media") := mean(!!sym(x), na.rm = TRUE),           # Columna con la media
!!paste0(x, "_n") := !!sym(x) - mean(!!sym(x), na.rm = TRUE)      # Columna con valores sin la media
) %>%
ungroup()
}
View(df)
modelo <- lm(lcrmrte_n ~ lprbarr_n + lprbconv_n + lprbpris_n + lavgsen_n + lpolpc_n + ldensity_n + ltaxpc_n + lpctmin_n + lwcon_n + lwtuc_n + lwtrd_n + lwfir_n + lwser_n + lwmfg_n + lwfed_n + lwsta_n + lwloc_n + lmix_n + lpctymle_n + urban_n + central_n + west_n, data = df)
summary(modelo)
pdata <- pdata.frame(df, index = c("county", "year"))
modelo_fe <- plm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle , data = pdata, model = "within")
summary(modelo_fe)
stargazer(modelo, type = "latex", out = "modelo2fe.tex") #guarda en .txt para latex
#-------------------
modelofwl <- lm(lcrmrte_n ~ lprbarr_n + lprbconv_n + lprbpris_n + lavgsen_n + lpolpc_n + ldensity_n + ltaxpc_n + lpctmin_n + lwcon_n + lwtuc_n + lwtrd_n + lwfir_n + lwser_n + lwmfg_n + lwfed_n + lwsta_n + lwloc_n + lmix_n + lpctymle_n + urban_n + central_n + west_n - 1, data = df)
summary(modelofwl)
modelo_fe <- plm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle , data = pdata, model = "within")
summary(modelo_fe)
#install.packages("readr")
#install.packages("stargazer")  # para exportar en latex fyi
#install.packages('fixest')
#install.packages("plm")
rm(list=ls())
#librerías necesarias
library(readr)
library(dplyr)
library(stargazer)
library(fixest)
library(plm)
#set directorio
setwd("/Users/ninadicostanzopereira/Desktop/ECONOMETR-A/tp2/")
#cargar datos
df <- read_csv("cornwell.csv")
#-----------------------------------a------------------------------------------
#ESTIMEN POR MCO
#agrego
#head(df)
modelo <- lm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle +  urban + central + west, data = df)
summary(modelo)
stargazer(modelo, type = "latex", out = "modelo.tex") #guarda en .txt para latex
#-----------------------------------c------------------------------------------
#use FE
pdata <- pdata.frame(df, index = c("county", "year"))
modelo_fe <- plm(lcrmrte ~ lprbarr + lprbconv + lprbpris + lavgsen + lpolpc + ldensity+ ltaxpc + lpctmin + lwcon + lwtuc + lwtrd + lwfir + lwser + lwmfg + lwfed + lwsta + lwloc + lmix + lpctymle , data = pdata, model = "within")
summary(modelo_fe)
stargazer(modelo, type = "latex", out = "modelofe.tex") #guarda en .txt para latex
#-----------------------------------d------------------------------------------
#restar medias, sacamos el promedio histórico x estado.
#con log
#calcular las medias por estado:
#Agregar una columna q sea media de c/u.
vars <- list("lcrmrte", "lprbarr", "lprbconv", "lprbpris", "lavgsen", "lpolpc",
"ldensity", "ltaxpc", "lpctmin", "lwcon", "lwtuc", "lwtrd", "lwfir",
"lwser", "lwmfg", "lwfed", "lwsta", "lwloc", "lmix", "lpctymle", "west", "central", "urban" )
df <- df %>%
mutate(nueva_col = west)
for (x in vars) {
df <- df %>%
group_by(county) %>%
mutate(
!!paste0(x, "_media") := mean(!!sym(x), na.rm = TRUE),           # Columna con las medias
!!paste0(x, "_n") := !!sym(x) - mean(!!sym(x), na.rm = TRUE)      # Columna con valores sin las medias
) %>%
ungroup()
}
modelofwl <- lm(lcrmrte_n ~ lprbarr_n + lprbconv_n + lprbpris_n + lavgsen_n + lpolpc_n + ldensity_n + ltaxpc_n + lpctmin_n + lwcon_n + lwtuc_n + lwtrd_n + lwfir_n + lwser_n + lwmfg_n + lwfed_n + lwsta_n + lwloc_n + lmix_n + lpctymle_n + urban_n + central_n + west_n - 1, data = df)
summary(modelofwl)
stargazer(modelo, type = "latex", out = "modelofwl.tex") #guarda en .txt para latex
modelofwl2 <- lm(lcrmrte ~ lprbarr_n + lprbconv_n + lprbpris_n + lavgsen_n + lpolpc_n + ldensity_n + ltaxpc_n + lpctmin_n + lwcon_n + lwtuc_n + lwtrd_n + lwfir_n + lwser_n + lwmfg_n + lwfed_n + lwsta_n + lwloc_n + lmix_n + lpctymle_n + urban_n + central_n + west_n - 1, data = df)
summary(modelofwl2)
stargazer(modelo, type = "latex", out = "modelofwl2.tex") #guarda en .txt para latex
summary(modelofwl2)
